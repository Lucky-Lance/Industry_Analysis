{"remainingRequest":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\src\\pages\\Visits\\components\\Map\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\src\\pages\\Visits\\components\\Map\\Map.vue","mtime":1651978576462},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651929515257},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1651929515987},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1651929506653},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651929515257},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1651929516005}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport AnimatedNumber from \"animated-number-vue\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_usaHigh from \"@amcharts/amcharts4-geodata/usaHigh\";\r\n\r\nimport cities from './mock';\r\n\r\nexport default {\r\n  name: 'Map',\r\n  components: { AnimatedNumber },\r\n  data() {\r\n    return {\r\n      animateNumberOptions: {\r\n        duration: 2000,\r\n        easing: 'easeInQuad',\r\n        formatValue(value) {\r\n          let number = value.toFixed(0);\r\n          let numberAsArrayWithSapces = [];\r\n          while (number >= 1) {\r\n            numberAsArrayWithSapces.unshift(number % 1000);\r\n            number = (number/1000).toFixed();\r\n          }\r\n          return numberAsArrayWithSapces.join(' ');\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    let map = am4core.create(this.$refs.map, am4maps.MapChart);\r\n    map.geodata = am4geodata_usaHigh;\r\n    map.projection = new am4maps.projections.AlbersUsa();\r\n    map.chartContainer.wheelable = false;\r\n    map.seriesContainer.draggable = false;\r\n    map.seriesContainer.resizable = false;\r\n    let polygonSeries = map.series.push(new am4maps.MapPolygonSeries());\r\n    polygonSeries.useGeodata = true;\r\n    map.homeZoomLevel = 1.2;\r\n\r\n    map.zoomControl = new am4maps.ZoomControl();\r\n    map.zoomControl.align = 'left';\r\n    map.zoomControl.valign = 'bottom';\r\n    map.zoomControl.dy = -20;\r\n\r\n    map.zoomControl.minusButton.background.fill = am4core.color(\"#C7D0FF\");\r\n    map.zoomControl.minusButton.background.fillOpacity = 0.24;\r\n    map.zoomControl.minusButton.background.stroke = null;\r\n    map.zoomControl.plusButton.background.fill = am4core.color(\"#C7D0FF\");\r\n    map.zoomControl.plusButton.background.fillOpacity = 0.24;\r\n    map.zoomControl.plusButton.background.stroke = null;\r\n    map.zoomControl.plusButton.label.fill = am4core.color(\"#fff\");\r\n    map.zoomControl.plusButton.label.fontWeight = 600;\r\n    map.zoomControl.plusButton.label.fontSize = 16;\r\n    map.zoomControl.minusButton.label.fill = am4core.color(\"#fff\");\r\n    map.zoomControl.minusButton.label.fontWeight = 600;\r\n    map.zoomControl.minusButton.label.fontSize = 16;\r\n    let plusButtonHoverState = map.zoomControl.plusButton.background.states.create(\"hover\");\r\n    plusButtonHoverState.properties.fillOpacity = 0.24;\r\n    let minusButtonHoverState = map.zoomControl.minusButton.background.states.create(\"hover\");\r\n    minusButtonHoverState.properties.fillOpacity = 0.24;\r\n\r\n    let polygonTemplate = polygonSeries.mapPolygons.template;\r\n    polygonTemplate.tooltipText = \"{name}\";\r\n    polygonTemplate.fill = am4core.color(\"#474D84\");\r\n    polygonTemplate.fillOpacity = 1;\r\n    let hs = polygonTemplate.states.create(\"hover\");\r\n    hs.properties.fillOpacity = 0.5;\r\n\r\n    polygonTemplate.stroke = am4core.color(\"#6979C9\");\r\n    polygonTemplate.strokeOpacity = 1;\r\n\r\n    let citySeries = map.series.push(new am4maps.MapImageSeries());\r\n    citySeries.data = cities;\r\n    citySeries.dataFields.value = \"size\";\r\n\r\n    let city = citySeries.mapImages.template;\r\n    city.nonScaling = true;\r\n    city.propertyFields.latitude = \"latitude\";\r\n    city.propertyFields.longitude = \"longitude\";\r\n    let circle = city.createChild(am4core.Circle);\r\n    circle.fill = am4core.color(\"#C7D0FF\");\r\n    circle.stroke = am4core.color(\"#ffffff\");\r\n    circle.strokeWidth = 0;\r\n    let circleHoverState = circle.states.create(\"hover\");\r\n    circleHoverState.properties.strokeWidth = 1;\r\n    circle.tooltipText = '{tooltip}';\r\n    circle.propertyFields.radius = 'size';\r\n\r\n    this.map = map;\r\n  },\r\n};\r\n",null]}