{"remainingRequest":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\src\\pages\\Charts\\mock.js","dependencies":[{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\src\\pages\\Charts\\mock.js","mtime":1651978576453},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651929515257},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1651929515987},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1651929506653},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\eslint-loader\\index.js","mtime":1651929513308}],"contextDependencies":[],"result":["import Highcharts from 'highcharts';\nimport config from \"../../config\";\nvar colors = config.colors;\nvar columnColors = [colors.blue, colors.green, colors.orange, colors.red, colors.default, colors.gray, colors.teal, colors.pink];\nvar lineColors = [colors.blue, colors.green, colors.orange];\nexport var chartData = {\n  apex: {\n    column: {\n      series: [{\n        data: [21, 22, 10, 28, 16, 21, 13, 30]\n      }],\n      options: {\n        chart: {\n          height: 350,\n          type: 'bar'\n        },\n        colors: columnColors,\n        plotOptions: {\n          bar: {\n            columnWidth: '45%',\n            distributed: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: ['John', 'Joe', 'Jake', 'Amber', 'Peter', 'Mary', 'David', 'Lily'],\n          labels: {\n            style: {\n              colors: colors.chartTextColor,\n              fontSize: '14px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          }\n        },\n        yaxis: {\n          labels: {\n            style: {\n              colors: colors.chartTextColor\n            }\n          }\n        },\n        tooltip: {\n          theme: 'dark'\n        },\n        grid: {\n          borderColor: colors.gridLineColor\n        },\n        legend: {\n          labels: {\n            colors: colors.chartTextColor\n          }\n        }\n      }\n    },\n    pie: {\n      series: [25, 15, 44, 55, 41, 17],\n      options: {\n        labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n        theme: {\n          monochrome: {\n            enabled: true,\n            color: colors.blue\n          }\n        },\n        stroke: {\n          show: false,\n          width: 0\n        },\n        legend: false,\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }]\n      }\n    }\n  },\n  echarts: {\n    line: {\n      color: lineColors,\n      tooltip: {\n        trigger: 'none',\n        axisPointer: {\n          type: 'cross'\n        }\n      },\n      legend: {\n        data: ['2020 Precipitation', '2016 Precipitation'],\n        textStyle: {\n          color: colors.textColor\n        }\n      },\n      grid: {\n        top: 70,\n        bottom: 50\n      },\n      xAxis: [{\n        type: 'category',\n        axisTick: {\n          alignWithLabel: true\n        },\n        axisLine: {\n          onZero: false,\n          lineStyle: {\n            color: lineColors[1]\n          }\n        },\n        axisPointer: {\n          label: {\n            formatter: function formatter(params) {\n              return 'Precipitation  ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\n            }\n          }\n        },\n        data: [\"2016-1\", \"2016-2\", \"2016-3\", \"2016-4\", \"2016-5\", \"2016-6\", \"2016-7\", \"2016-8\", \"2016-9\", \"2016-10\", \"2016-11\", \"2016-12\"]\n      }, {\n        type: 'category',\n        axisTick: {\n          alignWithLabel: true\n        },\n        axisLine: {\n          onZero: false,\n          lineStyle: {\n            color: lineColors[0]\n          }\n        },\n        axisPointer: {\n          label: {\n            formatter: function formatter(params) {\n              return 'Precipitation  ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\n            }\n          }\n        },\n        data: [\"2020-1\", \"2020-2\", \"2020-3\", \"2020-4\", \"2020-5\", \"2020-6\", \"2020-7\", \"2020-8\", \"2020-9\", \"2020-10\", \"2020-11\", \"2020-12\"]\n      }],\n      yAxis: [{\n        type: 'value',\n        axisLabel: {\n          color: colors.textColor\n        },\n        axisLine: {\n          lineStyle: {\n            color: colors.textColor\n          }\n        },\n        splitLine: {\n          lineStyle: {\n            color: colors.gridLineColor\n          }\n        },\n        axisPointer: {\n          label: {\n            color: colors.dark\n          }\n        }\n      }],\n      series: [{\n        name: '2020 Precipitation',\n        type: 'line',\n        xAxisIndex: 1,\n        smooth: true,\n        data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3]\n      }, {\n        name: '2016 Precipitation',\n        type: 'line',\n        smooth: true,\n        data: [3.9, 5.9, 11.1, 18.7, 48.3, 69.2, 231.6, 46.6, 55.4, 18.4, 10.3, 0.7]\n      }]\n    },\n    donut: {\n      tooltip: {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n      },\n      legend: {\n        show: false\n      },\n      color: [colors.blue, colors.green, colors.orange, colors.red, colors.purple],\n      series: [{\n        name: 'Access source',\n        type: 'pie',\n        radius: ['50%', '70%'],\n        avoidLabelOverlap: false,\n        label: {\n          normal: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            show: true,\n            textStyle: {\n              fontSize: '30',\n              fontWeight: 'bold'\n            }\n          }\n        },\n        labelLine: {\n          normal: {\n            show: false\n          }\n        },\n        data: [{\n          value: 335,\n          name: 'Direct interview'\n        }, {\n          value: 310,\n          name: 'Email marketing'\n        }, {\n          value: 234,\n          name: 'Alliance advertising'\n        }, {\n          value: 135,\n          name: 'Video ad'\n        }, {\n          value: 1548,\n          name: 'Search engine'\n        }]\n      }]\n    },\n    river: {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'line',\n          lineStyle: {\n            color: 'rgba(0,0,0,0.2)',\n            width: 1,\n            type: 'solid'\n          }\n        }\n      },\n      legend: {\n        data: ['DQ', 'TY', 'SS', 'QG', 'SY', 'DD'],\n        textStyle: {\n          color: colors.textColor\n        }\n      },\n      color: [colors.blue, colors.green, colors.orange, colors.red, colors.purple, colors.gray],\n      singleAxis: {\n        top: 50,\n        bottom: 50,\n        axisTick: {},\n        axisLabel: {\n          color: colors.textColor\n        },\n        type: 'time',\n        axisPointer: {\n          animation: true,\n          label: {\n            show: false,\n            color: colors.dark\n          }\n        },\n        splitLine: {\n          show: true,\n          lineStyle: {\n            color: [colors.gridLineColor],\n            type: 'dashed',\n            opacity: 0.2\n          }\n        },\n        axisLine: {\n          lineStyle: {\n            color: colors.textColor\n          }\n        }\n      },\n      series: [{\n        type: 'themeRiver',\n        itemStyle: {\n          emphasis: {\n            shadowBlur: 20,\n            shadowColor: 'rgba(0, 0, 0, 0.8)'\n          }\n        },\n        data: [['2020/11/08', 10, 'DQ'], ['2020/11/09', 15, 'DQ'], ['2020/11/10', 35, 'DQ'], ['2020/11/11', 38, 'DQ'], ['2020/11/12', 22, 'DQ'], ['2020/11/13', 16, 'DQ'], ['2020/11/14', 7, 'DQ'], ['2020/11/15', 2, 'DQ'], ['2020/11/16', 17, 'DQ'], ['2020/11/17', 33, 'DQ'], ['2020/11/18', 40, 'DQ'], ['2020/11/19', 32, 'DQ'], ['2020/11/20', 26, 'DQ'], ['2020/11/21', 35, 'DQ'], ['2020/11/22', 40, 'DQ'], ['2020/11/23', 32, 'DQ'], ['2020/11/24', 26, 'DQ'], ['2020/11/25', 22, 'DQ'], ['2020/11/26', 16, 'DQ'], ['2020/11/27', 22, 'DQ'], ['2020/11/28', 10, 'DQ'], ['2020/11/08', 35, 'TY'], ['2020/11/09', 36, 'TY'], ['2020/11/10', 37, 'TY'], ['2020/11/11', 22, 'TY'], ['2020/11/12', 24, 'TY'], ['2020/11/13', 26, 'TY'], ['2020/11/14', 34, 'TY'], ['2020/11/15', 21, 'TY'], ['2020/11/16', 18, 'TY'], ['2020/11/17', 45, 'TY'], ['2020/11/18', 32, 'TY'], ['2020/11/19', 35, 'TY'], ['2020/11/20', 30, 'TY'], ['2020/11/21', 28, 'TY'], ['2020/11/22', 27, 'TY'], ['2020/11/23', 26, 'TY'], ['2020/11/24', 15, 'TY'], ['2020/11/25', 30, 'TY'], ['2020/11/26', 35, 'TY'], ['2020/11/27', 42, 'TY'], ['2020/11/28', 42, 'TY'], ['2020/11/08', 21, 'SS'], ['2020/11/09', 25, 'SS'], ['2020/11/10', 27, 'SS'], ['2020/11/11', 23, 'SS'], ['2020/11/12', 24, 'SS'], ['2020/11/13', 21, 'SS'], ['2020/11/14', 35, 'SS'], ['2020/11/15', 39, 'SS'], ['2020/11/16', 40, 'SS'], ['2020/11/17', 36, 'SS'], ['2020/11/18', 33, 'SS'], ['2020/11/19', 43, 'SS'], ['2020/11/20', 40, 'SS'], ['2020/11/21', 34, 'SS'], ['2020/11/22', 28, 'SS'], ['2020/11/23', 26, 'SS'], ['2020/11/24', 37, 'SS'], ['2020/11/25', 41, 'SS'], ['2020/11/26', 46, 'SS'], ['2020/11/27', 47, 'SS'], ['2020/11/28', 41, 'SS'], ['2020/11/08', 10, 'QG'], ['2020/11/09', 15, 'QG'], ['2020/11/10', 35, 'QG'], ['2020/11/11', 38, 'QG'], ['2020/11/12', 22, 'QG'], ['2020/11/13', 16, 'QG'], ['2020/11/14', 7, 'QG'], ['2020/11/15', 2, 'QG'], ['2020/11/16', 17, 'QG'], ['2020/11/17', 33, 'QG'], ['2020/11/18', 40, 'QG'], ['2020/11/19', 32, 'QG'], ['2020/11/20', 26, 'QG'], ['2020/11/21', 35, 'QG'], ['2020/11/22', 40, 'QG'], ['2020/11/23', 32, 'QG'], ['2020/11/24', 26, 'QG'], ['2020/11/25', 22, 'QG'], ['2020/11/26', 16, 'QG'], ['2020/11/27', 22, 'QG'], ['2020/11/28', 10, 'QG'], ['2020/11/08', 10, 'SY'], ['2020/11/09', 15, 'SY'], ['2020/11/10', 35, 'SY'], ['2020/11/11', 38, 'SY'], ['2020/11/12', 22, 'SY'], ['2020/11/13', 16, 'SY'], ['2020/11/14', 7, 'SY'], ['2020/11/15', 2, 'SY'], ['2020/11/16', 17, 'SY'], ['2020/11/17', 33, 'SY'], ['2020/11/18', 40, 'SY'], ['2020/11/19', 32, 'SY'], ['2020/11/20', 26, 'SY'], ['2020/11/21', 35, 'SY'], ['2020/11/22', 4, 'SY'], ['2020/11/23', 32, 'SY'], ['2020/11/24', 26, 'SY'], ['2020/11/25', 22, 'SY'], ['2020/11/26', 16, 'SY'], ['2020/11/27', 22, 'SY'], ['2020/11/28', 10, 'SY'], ['2020/11/08', 10, 'DD'], ['2020/11/09', 15, 'DD'], ['2020/11/10', 35, 'DD'], ['2020/11/11', 38, 'DD'], ['2020/11/12', 22, 'DD'], ['2020/11/13', 16, 'DD'], ['2020/11/14', 7, 'DD'], ['2020/11/15', 2, 'DD'], ['2020/11/16', 17, 'DD'], ['2020/11/17', 33, 'DD'], ['2020/11/18', 4, 'DD'], ['2020/11/19', 32, 'DD'], ['2020/11/20', 26, 'DD'], ['2020/11/21', 35, 'DD'], ['2020/11/22', 40, 'DD'], ['2020/11/23', 32, 'DD'], ['2020/11/24', 26, 'DD'], ['2020/11/25', 22, 'DD'], ['2020/11/26', 16, 'DD'], ['2020/11/27', 22, 'DD'], ['2020/11/28', 10, 'DD']]\n      }]\n    }\n  },\n  highcharts: {\n    mixed: {\n      chart: {\n        type: 'spline',\n        height: 350,\n        backgroundColor: 'transparent'\n      },\n      exporting: {\n        enabled: false\n      },\n      title: {\n        text: 'Snow depth at Vikjafjellet, Norway',\n        style: {\n          color: colors.textColor\n        }\n      },\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        type: 'datetime',\n        dateTimeLabelFormats: {\n          // don't display the dummy year\n          month: '%e. %b',\n          year: '%b'\n        },\n        labels: {\n          style: {\n            color: colors.textColor\n          }\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          enabled: false\n        },\n        labels: {\n          style: {\n            color: colors.textColor\n          }\n        },\n        gridLineColor: colors.gridLineColor\n      },\n      tooltip: {\n        headerFormat: '<b>{series.name}</b><br>',\n        pointFormat: '{point.x:%e. %b}: {point.y:.2f} m'\n      },\n      legend: {\n        enabled: false\n      },\n      plotOptions: {\n        series: {\n          marker: {\n            enabled: false,\n            symbol: 'circle'\n          }\n        }\n      },\n      colors: [colors.green, colors.blue, colors.red],\n      series: [{\n        name: \"Winter 2014-2020\",\n        data: [[Date.UTC(1970, 10, 25), 0], [Date.UTC(1970, 11, 6), 0.25], [Date.UTC(1970, 11, 20), 1.41], [Date.UTC(1970, 11, 25), 1.64], [Date.UTC(1971, 0, 4), 1.6], [Date.UTC(1971, 0, 17), 2.55], [Date.UTC(1971, 0, 24), 2.62], [Date.UTC(1971, 1, 4), 2.5], [Date.UTC(1971, 1, 14), 2.42], [Date.UTC(1971, 2, 6), 2.74], [Date.UTC(1971, 2, 14), 2.62], [Date.UTC(1971, 2, 24), 2.6], [Date.UTC(1971, 3, 1), 2.81], [Date.UTC(1971, 3, 11), 2.63], [Date.UTC(1971, 3, 27), 2.77], [Date.UTC(1971, 4, 4), 2.68], [Date.UTC(1971, 4, 9), 2.56], [Date.UTC(1971, 4, 14), 2.39], [Date.UTC(1971, 4, 19), 2.3], [Date.UTC(1971, 5, 4), 2], [Date.UTC(1971, 5, 9), 1.85], [Date.UTC(1971, 5, 14), 1.49], [Date.UTC(1971, 5, 19), 1.27], [Date.UTC(1971, 5, 24), 0.99], [Date.UTC(1971, 5, 29), 0.67], [Date.UTC(1971, 6, 3), 0.18], [Date.UTC(1971, 6, 4), 0]]\n      }, {\n        name: \"Winter 2020-2016\",\n        type: 'areaspline',\n        data: [[Date.UTC(1970, 10, 9), 0], [Date.UTC(1970, 10, 15), 0.23], [Date.UTC(1970, 10, 20), 0.25], [Date.UTC(1970, 10, 25), 0.23], [Date.UTC(1970, 10, 30), 0.39], [Date.UTC(1970, 11, 5), 0.41], [Date.UTC(1970, 11, 10), 0.59], [Date.UTC(1970, 11, 15), 0.73], [Date.UTC(1970, 11, 20), 0.41], [Date.UTC(1970, 11, 25), 1.07], [Date.UTC(1970, 11, 30), 0.88], [Date.UTC(1971, 0, 5), 0.85], [Date.UTC(1971, 0, 11), 0.89], [Date.UTC(1971, 0, 17), 1.04], [Date.UTC(1971, 0, 20), 1.02], [Date.UTC(1971, 0, 25), 1.03], [Date.UTC(1971, 0, 30), 1.39], [Date.UTC(1971, 1, 5), 1.77], [Date.UTC(1971, 1, 26), 2.12], [Date.UTC(1971, 3, 19), 2.1], [Date.UTC(1971, 4, 9), 1.7], [Date.UTC(1971, 4, 29), 0.85], [Date.UTC(1971, 5, 7), 0]]\n      }, {\n        name: \"Winter 2016-2017\",\n        type: 'areaspline',\n        data: [[Date.UTC(1970, 9, 15), 0], [Date.UTC(1970, 9, 31), 0.09], [Date.UTC(1970, 10, 7), 0.17], [Date.UTC(1970, 10, 10), 0.1], [Date.UTC(1970, 11, 10), 0.1], [Date.UTC(1970, 11, 13), 0.1], [Date.UTC(1970, 11, 16), 0.11], [Date.UTC(1970, 11, 19), 0.11], [Date.UTC(1970, 11, 22), 0.08], [Date.UTC(1970, 11, 25), 0.23], [Date.UTC(1970, 11, 28), 0.37], [Date.UTC(1971, 0, 16), 0.68], [Date.UTC(1971, 0, 19), 0.55], [Date.UTC(1971, 0, 22), 0.4], [Date.UTC(1971, 0, 25), 0.4], [Date.UTC(1971, 0, 28), 0.37], [Date.UTC(1971, 0, 31), 0.43], [Date.UTC(1971, 1, 4), 0.42], [Date.UTC(1971, 1, 7), 0.39], [Date.UTC(1971, 1, 10), 0.39], [Date.UTC(1971, 1, 13), 0.39], [Date.UTC(1971, 1, 16), 0.39], [Date.UTC(1971, 1, 19), 0.35], [Date.UTC(1971, 1, 22), 0.45], [Date.UTC(1971, 1, 25), 0.62], [Date.UTC(1971, 1, 28), 0.68], [Date.UTC(1971, 2, 4), 0.68], [Date.UTC(1971, 2, 7), 0.65], [Date.UTC(1971, 2, 10), 0.65], [Date.UTC(1971, 2, 13), 0.75], [Date.UTC(1971, 2, 16), 0.86], [Date.UTC(1971, 2, 19), 1.14], [Date.UTC(1971, 2, 22), 1.2], [Date.UTC(1971, 2, 25), 1.27], [Date.UTC(1971, 2, 27), 1.12], [Date.UTC(1971, 2, 30), 0.98], [Date.UTC(1971, 3, 3), 0.85], [Date.UTC(1971, 3, 6), 1.04], [Date.UTC(1971, 3, 9), 0.92], [Date.UTC(1971, 3, 12), 0.96], [Date.UTC(1971, 3, 15), 0.94], [Date.UTC(1971, 3, 18), 0.99], [Date.UTC(1971, 3, 21), 0.96], [Date.UTC(1971, 3, 24), 1.15], [Date.UTC(1971, 3, 27), 1.18], [Date.UTC(1971, 3, 30), 1.12], [Date.UTC(1971, 4, 3), 1.06], [Date.UTC(1971, 4, 6), 0.96], [Date.UTC(1971, 4, 9), 0.87], [Date.UTC(1971, 4, 12), 0.88], [Date.UTC(1971, 4, 15), 0.79], [Date.UTC(1971, 4, 18), 0.54], [Date.UTC(1971, 4, 21), 0.34], [Date.UTC(1971, 4, 25), 0]]\n      }]\n    }\n  }\n};\nexport var liveChartInterval = null;\nexport var liveChart = {\n  liveChartInterval: null,\n  colors: [colors.blue],\n  chart: {\n    backgroundColor: 'transparent',\n    height: 170,\n    type: 'spline',\n    animation: Highcharts.svg,\n    // don't animate in old IE\n    marginRight: 10,\n    events: {\n      load: function load() {\n        // set up the updating of the chart each second\n        var series = this.series[0];\n        liveChartInterval = setInterval(function () {\n          var x = new Date().getTime(),\n              // current time\n          y = Math.random();\n          series.addPoint([x, y], true, true);\n        }, 1000);\n      }\n    }\n  },\n  time: {\n    useUTC: false\n  },\n  credits: {\n    enabled: false\n  },\n  title: false,\n  xAxis: {\n    type: 'datetime',\n    tickPixelInterval: 150,\n    labels: {\n      style: {\n        color: colors.textColor\n      }\n    },\n    lineWidth: 0,\n    tickWidth: 0\n  },\n  yAxis: {\n    title: {\n      enabled: false\n    },\n    plotLines: [{\n      value: 0,\n      width: 1,\n      color: colors.textColor\n    }],\n    labels: {\n      style: {\n        color: colors.textColor\n      }\n    },\n    gridLineColor: colors.gridLineColor\n  },\n  tooltip: {\n    headerFormat: '<b>{series.name}</b><br/>',\n    pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'\n  },\n  legend: {\n    enabled: false\n  },\n  exporting: {\n    enabled: false\n  },\n  series: [{\n    name: 'Random data',\n    data: function () {\n      // generate an array of random data\n      var data = [],\n          time = new Date().getTime(),\n          i;\n\n      for (i = -19; i <= 0; i += 1) {\n        data.push({\n          x: time + i * 1000,\n          y: Math.random()\n        });\n      }\n\n      return data;\n    }()\n  }]\n};",null]}