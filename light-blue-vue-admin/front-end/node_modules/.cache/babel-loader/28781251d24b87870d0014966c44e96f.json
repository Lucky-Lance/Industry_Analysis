{"remainingRequest":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\src\\components\\Sidebar\\NavLink\\NavLink.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\src\\components\\Sidebar\\NavLink\\NavLink.vue","mtime":1651978576430},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651929515257},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1651929515987},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1651929506653},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651929515257},{"path":"C:\\Users\\12779\\Desktop\\Industry_Analysis\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1651929516005}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"C:\\\\Users\\\\12779\\\\Desktop\\\\Industry_Analysis\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'NavLink',\n  props: {\n    badge: {\n      type: String,\n      dafault: ''\n    },\n    header: {\n      type: String,\n      default: ''\n    },\n    iconName: {\n      type: String,\n      default: ''\n    },\n    headerLink: {\n      type: String,\n      default: ''\n    },\n    link: {\n      type: String,\n      default: ''\n    },\n    childrenLinks: {\n      type: Array,\n      default: null\n    },\n    className: {\n      type: String,\n      default: ''\n    },\n    isHeader: {\n      type: Boolean,\n      default: false\n    },\n    deep: {\n      type: Number,\n      default: 0\n    },\n    activeItem: {\n      type: String,\n      default: ''\n    },\n    label: {\n      type: String\n    },\n    labelColor: {\n      type: String,\n      default: 'warning'\n    },\n    index: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      headerLinkWasClicked: true\n    };\n  },\n  methods: _objectSpread({}, mapActions('layout', ['changeSidebarActive']), {\n    togglePanelCollapse: function togglePanelCollapse(link) {\n      this.changeSidebarActive(link);\n      this.headerLinkWasClicked = !this.headerLinkWasClicked || !this.activeItem.includes(this.index);\n    }\n  }),\n  computed: {\n    fullIconName: function fullIconName() {\n      return \"fi \".concat(this.iconName);\n    },\n    isActive: function isActive() {\n      return this.activeItem && this.activeItem.includes(this.index) && this.headerLinkWasClicked;\n    }\n  }\n};",null]}